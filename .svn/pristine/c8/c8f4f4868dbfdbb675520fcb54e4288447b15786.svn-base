<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
    
    <!--默认数据源 -->
    <bean id="ecDataSource" class="com.alibaba.druid.pool.DruidDataSource" >
        <property name="filters" value="stat" />
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="${ec.db.url}" />
        <property name="username" value="${ec.db.username}" />
        <property name="password" value="${ec.db.password}"/>
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="5" />
        <property name="minIdle" value="1" />
        <property name="maxActive" value="50" />
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <property name="validationQuery" value="${jdbc.validationQuery}" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
    </bean>

    <!-- define the SqlSessionFactory -->
    <bean id="ecSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="ecDataSource" />
        <property name="typeAliasesPackage" value="com.xiakee.domain" />
    </bean>

    <!-- scan for mappers and let them be autowired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.xiakee.ecdao" />
        <property name="sqlSessionFactoryBeanName" value="ecSqlSessionFactory" />
    </bean>
	
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="ecSqlSessionFactory"/>
    </bean>
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="ecDataSource"/>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <tx:advice id="apus.default.txAdvice" transaction-manager="transactionManager">
	    <tx:attributes>
	        <tx:method name="*" propagation="REQUIRED"/>
	    </tx:attributes>
	</tx:advice>
    <aop:config>
        <aop:advisor pointcut="within(*..service..*) or within(*..Service..*) or ${transactionPointcut}"
                     advice-ref="apus.default.txAdvice"/>
    </aop:config>
    
    <context:component-scan base-package="com.xiakee.ecdao"/>
</beans>

